class LocationBean {
    private val errorCode = 0
    private val errorInfo: String? = null
    var from: LocationFrom? = null
        private set//不需要set方法设为私有
    var pois: List<LatLngBean>? = null
    var colorList: List<Int>? = null
    var direction //方向角。定位类型为AMapLocation.LOCATION_TYPE_GPS时，方向角指的是运动方向。
            = 0f

    //构造1
    constructor() {
        ViseLog.d("qwfefwefwfewe")
    }
    //构造2
    constructor(mapType: MapType?, from: LocationFrom?) {
        this.from = from
        this.mapType = mapType
    }

    fun setLatLngBean(latLngBean: LatLngBean) {
        this.latLngBean = latLngBean
        address = latLngBean.address
    }

    val lat: Double
        get() = latLngBean!!.lat
    val lng: Double
        get() = latLngBean!!.lng

    //静态方法
    companion object {
        private const val CODETEST = 1
        var CODETEST2 = 1
        var CODETEST3 = "1"
        protected var CODETEST4 = 1.4
        val aAA: Int
            get() {
                ViseLog.d("111111")
                return 1
            }
    }
}

构造另一种写法，必填的不要给初始值，可选的加上初始值
class LatLngBean @JvmOverloads constructor(//纬度
    val lat: Double, //经度
    val lng: Double, //地址
    val address: String = ""
) {
    var city = "厦门" //城市
}